<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cst8277</groupId>
	<artifactId>Assignment-DataBank-JSF-JPA</artifactId>
	<version>1</version>
	<packaging>war</packaging>
	<name>DataBank-JSF-JPA</name>
	<description>Mavenized JSF JPA</description>

	<!-- why is everything a property? Because hard-coded values become part 
		of Maven's immutable Model object and then their contents can't be changed. 
		However, if the value is set in a user-defined property BEFORE the Model 
		object is created, then it is possible to do: mvn clean compile -Dfoo.bar.version=1.2.3 
		in order to (say for example) test out a newer version of some dependency 
		without having to change the pom.xml. -->
	<properties>
		<!-- maven properties -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.release>11</maven.compiler.release>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.war.plugin.version>3.3.1</maven.war.plugin.version>
		<failOnMissingWebXml>false</failOnMissingWebXml>

		<!-- code properties -->
		<jakartaee.api.version>8.0.0</jakartaee.api.version>
		<junit.version>5.7.0</junit.version>
		<connectorj.version>8.0.22</connectorj.version>
		<hibernate.core.version>5.4.27.Final</hibernate.core.version>
		<log4j-api.version>2.14.0</log4j-api.version>
		<log4j-core.version>2.14.0</log4j-core.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${log4j-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j-core.version}</version>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.core.version}</version>
		</dependency>

		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<version>${jakartaee.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${connectorj.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<release>${maven.compiler.release}</release>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.plugin.version}</version>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>